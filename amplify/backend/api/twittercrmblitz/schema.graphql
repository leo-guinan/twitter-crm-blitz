type User @model {
  id: ID!
  username: String!
  twitterToken: String!
  twitterSecretToken: String!
  twitterId: String!

  name: String
  email: String
  hashedPassword: String
  role: String
  tokens: [Token] @connection(keyName: "byUser", fields: ["id"])
  sessions: [Session] @connection(keyName: "byUser", fields: ["id"])
}

type Session @model @key(name: "byUser", fields: ["userId", "publicData"]) {
  id: ID!
  expiresAt: AWSDateTime!
  handle: String!
  hashedSessionToken: String
  antiCSRFToken: String
  publicData: String
  privateData: String
  userId: ID

  user: User @connection(fields: ["userId"])
}

type Token @model @key(name: "byUser", fields: ["userId", "hashedToken"]) {
  id: ID!
  hashedToken: String!
  type: String!
  expiresAt: AWSDateTime!
  sentTo: String!
  userId: ID!

  user: User! @connection(fields: ["userId"])
}

type TwitterUser @model @key(fields: ["twitterId"]) {
  username: String!
  name: String!
  bio: String!
  profilePictureUrl: String!
  twitterId: String!
}

type Relationship @model @key(fields: ["user1TwitterId", "user2TwitterId"]) {
  user1: TwitterUser @connection(fields: ["user1TwitterId"])
  user1TwitterId: String!
  user2: TwitterUser @connection(fields: ["user2TwitterId"])
  user2TwitterId: String!
  type: String!
}
