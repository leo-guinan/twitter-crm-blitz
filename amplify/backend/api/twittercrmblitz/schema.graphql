type TwitterAccount @model {
  id: ID!
  userId: String!
  twitterToken: String
  twitterSecretToken: String
  twitterUser: TwitterUser @connection(fields: ["twitterUserId"])
  twitterUserId: String!
}

type TwitterUser @model @key(fields: ["twitterId"]) {
  twitterId: String!
  twitterBio: String
  twitterUsername: String
}

type Relationship @model {
  id: ID!
  twitterAccountId: ID!
  twitterAccount: TwitterAccount @connection(fields: ["twitterAccountId"])
  twitterUser: TwitterUser @connection(fields: ["twitterUserId"])
  twitterUserId: String!
  relationshipType: RelationshipType!
}

enum RelationshipType {
  follower
  following
  mutual
}

type TwitterDataPull @model {
  id: ID!
  twitterAccount: TwitterAccount @connection(fields: ["twitterAccountId"])
  twitterAccountId: ID!
  relationshipType: RelationshipType
  paginationToken: String
}

# type Blog @model {
#   id: ID!
#   name: String!
#   posts: [Post] @connection(keyName: "byBlog", fields: ["id"])
# }

# type Post @model @key(name: "byBlog", fields: ["blogID"]) {
#   id: ID!
#   title: String!
#   blogID: ID!
#   blog: Blog @connection(fields: ["blogID"])
#   comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
# }

# type Comment @model @key(name: "byPost", fields: ["postID", "content"]) {
#   id: ID!
#   postID: ID!
#   post: Post @connection(fields: ["postID"])
#   content: String!
# }
